AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  UbuntuAMI:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: '/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Ringer-EC2LaunchTemplate
      LaunchTemplateData:
        InstanceType: t2.micro
        ImageId: !Ref UbuntuAMI
        KeyName: ringer-stelligent
        IamInstanceProfile: 
          Name: !Ref InstanceProfile
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: True
            SubnetId: subnet-0b1b4886031bb1486
        UserData: 
          Fn::Base64: !Sub | 
            #!/bin/bash -xe
            /usr/bin/apt-get update -y
            /usr/bin/apt-get install -y python3-pip
            python3 -m pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-2.0-9.tar.gz
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets default --region ${AWS::Region}
            /usr/local/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource EC2  --region ${AWS::Region}
  EC2:
    Type: AWS::EC2::Instance
    Properties: 
      Tags: 
        - Key: Name
          Value: ringer-instance
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: "1"
    Metadata: 
      AWS::CloudFormation::Init: 
        configSets:
          default:
            - install
            - config
            - launch
        install:
          sources: 
            /etc/cloudwatchagent: https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip
          commands:
            installCloudwatch: 
              command: ./install.sh
              cwd: /etc/cloudwatchagent
        config: 
          files:
            /opt/aws/amazon-cloudwatch-agent/amazon-cloudwatch-agent.json:
              content: !Sub |
                {
                  "agent": {
                    "metrics_collection_interval": 60,
                    "run_as_user": "root"
                  },
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [
                          {
                            "file_path": "/var/log/**.log",
                            "log_group_name": "ringer-logs",
                            "log_stream_name": "ringer-log-stream"
                          }
                        ]
                      }
                    }
                  },
                  "metrics": {
                    "append_dimensions": {
                        "AutoScalingGroupName": "${!aws:AutoScalingGroupName}",
                          "ImageId": "${!aws:ImageId}",
                          "InstanceId": "${!aws:InstanceId}",
                          "InstanceType": "${!aws:InstanceType}"
                      },
                    "metrics_collected": {
                      "disk": {
                        "measurement": [
                          "used_percent"
                        ],
                        "metrics_collection_interval": 60,
                        "resources": [
                          "*"
                        ]
                      },
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ],
                        "metrics_collection_interval": 60
                      },
                      "statsd": {
                        "metrics_aggregation_interval": 60,
                        "metrics_collection_interval": 10,
                        "service_address": ":8125"
                      }
                    }
                  }
                }
        launch:
          commands:
            launchCloudwatch:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/amazon-cloudwatch-agent.json -s
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref RoleCloudWatch
  RoleCloudWatch:
    Type: AWS::IAM::Role
    Properties: 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: ringer-SG
      VpcId: vpc-09519c2d03f379507
